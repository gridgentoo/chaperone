# persist frequency
messageTracker.reportFreqMsgCount=2097152
messageTracker.reportFreqIntervalInSec=60
messageTracker.timeBucketIntervalInSec=600

# graphite report
metrics.reporter.graphite.host=localhost
metrics.reporter.graphite.port=6332
metrics.reporter.graphite.report.period.sec=300

# consume topic of audit messages
reporter.auditTopicName=chaperone-audit
reporter.datacenter=local
kafka.brokerList=localhost:9093
ingester.numWorkerThreads=4
ingester.zookeeper.connect=localhost:2181/cluster1
ingester.zookeeper.sync.time.ms=30000
ingester.zookeeper.session.timeout.ms=30000
ingester.auto.offset.reset=largest
ingester.auto.commit.enable=false
ingester.auto.commit.interval.ms=1000
ingester.blacklisted.topics=
ingester.combine.metrics.among.hosts=true
dummy.start.offsets=0

# use offset in db to ensure exactly once
ingester.start.from.tail=false
ignore.offsets.in.persistent.store=false

# deduplicate audit messages with redis
ingester.enable.dedup=false
ingester.dup.host.prefix=
ingester.hosts.with.dup=
ingester.redis.host=localhost
ingester.redis.port=6379
ingester.redis.maxmem.bytes=1073741824
ingester.redis.maxmem.policy=volatile-ttl
ingester.redis.key.ttl.sec=21600

# persist metrics into database
enable.persistent.store=true
audit.reporter.type=db
audit.reporter.queue.size=1048576
audit.db.remove.old.record=true
audit.db.retention.hours=336
audit.db.username=root
audit.db.password=
audit.db.jdbc.url=jdbc:mysql://127.0.0.1:3306/chaperone
audit.db.data.table.name=audit_metrics
audit.db.offset.table.name=ingester_offsets
